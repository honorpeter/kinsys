/*
 * dts file for Xilinx ZynqMP ZCU102
 *
 * (C) Copyright 2015, Xilinx, Inc.
 *
 * Michal Simek <michal.simek@xilinx.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 */

/dts-v1/;

/include/ "zynqmp.dtsi"
/include/ "zynqmp-clk.dtsi"
/include/ "pcw.dtsi"
/include/ "system-conf.dtsi"

/ {
	model = "ZynqMP ZCU102";
	compatible = "xlnx,zynqmp-zcu102", "xlnx,zynqmp";

	chosen {
		bootargs = "earlycon=cdns,mmio,0xFF000000,115200n8 uio_pdrv_genirq.of_id=generic-uio";
	};

	amba_pl: amba_pl {
		#address-cells = <2>;
		#size-cells = <2>;
		compatible = "simple-bus";
		ranges ;

		m_axi_image: kinpira@00000000 {
			xlnx,m-axi-image-addr-width = <0x20>;
			xlnx,m-axi-image-aruser-width = <0x0>;
			xlnx,m-axi-image-awuser-width = <0x0>;
			xlnx,m-axi-image-burst-max = <0x100>;
			xlnx,m-axi-image-buser-width = <0x0>;
			xlnx,m-axi-image-data-width = <0x20>;
			xlnx,m-axi-image-id-width = <0x1>;
			xlnx,m-axi-image-ruser-width = <0x0>;
			xlnx,m-axi-image-wuser-width = <0x0>;
		};

		s_axi_params: kinpira@a0000000 {
			compatible = "generic-uio";
			reg = <0x0 0xa0000000 0x0 0x10000>;
			xlnx,s-axi-params-addr-width = <0x7>;
			xlnx,s-axi-params-data-width = <0x20>;
		};

		s_axi_renkon: kinpira@a0010000 {
			compatible = "generic-uio";
			reg = <0x0 0xa0010000 0x0 0x10000>;
			xlnx,s-axi-renkon-addr-width = <0x10>;
			xlnx,s-axi-renkon-aruser-width = <0x0>;
			xlnx,s-axi-renkon-awuser-width = <0x0>;
			xlnx,s-axi-renkon-buser-width = <0x0>;
			xlnx,s-axi-renkon-data-width = <0x20>;
			xlnx,s-axi-renkon-id-width = <0xc>;
			xlnx,s-axi-renkon-ruser-width = <0x0>;
			xlnx,s-axi-renkon-wuser-width = <0x0>;
		};

		s_axi_gobou: kinpira@a0080000 {
			compatible = "generic-uio";
			reg = <0x0 0xa0080000 0x0 0x80000>;
			xlnx,s-axi-gobou-addr-width = <0x13>;
			xlnx,s-axi-gobou-aruser-width = <0x0>;
			xlnx,s-axi-gobou-awuser-width = <0x0>;
			xlnx,s-axi-gobou-buser-width = <0x0>;
			xlnx,s-axi-gobou-data-width = <0x20>;
			xlnx,s-axi-gobou-id-width = <0xc>;
			xlnx,s-axi-gobou-ruser-width = <0x0>;
			xlnx,s-axi-gobou-wuser-width = <0x0>;
		};
	};
};

&lpd_dma_chan1 {
	status = "disabled";
};
&lpd_dma_chan2 {
	status = "disabled";
};
&lpd_dma_chan3 {
	status = "disabled";
};
&lpd_dma_chan4 {
	status = "disabled";
};
&lpd_dma_chan5 {
	status = "disabled";
};
&lpd_dma_chan6 {
	status = "disabled";
};
&lpd_dma_chan7 {
	status = "disabled";
};
&lpd_dma_chan8 {
	status = "disabled";
};

&i2c1 {
	status = "okay";
	clock-frequency = <400000>;
	/* FIXME PL i2c via PCA9306 - u45 */
	/* FIXME MSP430 - u41 - not detected */
	i2cswitch@74 { /* u34 */
		compatible = "nxp,pca9548";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x74>;
		i2c@0 { /* i2c mw 74 0 1 */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;
			/*
			 * IIC_EEPROM 1kB memory which uses 256B blocks
			 * where every block has different address.
			 *    0 - 256B address 0x54
			 * 256B - 512B address 0x55
			 * 512B - 768B address 0x56
			 * 768B - 1024B address 0x57
			 */
			eeprom@54 { /* u23 */
				compatible = "at,24c08";
				reg = <0x54>;
			};
		};
		i2c@1 { /* i2c mw 74 0 2 */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <1>;
			si5341: clock-generator1@36 { /* SI5341 - u69 */
				compatible = "si5341";
				reg = <0x36>;
			};

		};
		i2c@2 { /* i2c mw 74 0 4 */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <2>;
			si570_1: clock-generator2@5d { /* USER SI570 - u42 */
				#clock-cells = <0>;
				compatible = "silabs,si570";
				reg = <0x5d>;
				temperature-stability = <50>;
				factory-fout = <300000000>;
				clock-frequency = <300000000>;
			};
		};
		i2c@3 { /* i2c mw 74 0 8 */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <3>;
			si570_2: clock-generator3@5d { /* USER MGT SI570 - u56 */
				#clock-cells = <0>;
				compatible = "silabs,si570";
				reg = <0x5d>;
				temperature-stability = <50>; /* copy from zc702 */
				factory-fout = <156250000>;
				clock-frequency = <148500000>;
			};
		};
		i2c@4 { /* i2c mw 74 0 10 */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <4>;
			si5328: clock-generator4@69 {/* SI5328 - u20 */
				compatible = "silabs,si5328";
				reg = <0x69>;
			};
		};
		/* 5 - 7 unconnected */
	};

	i2cswitch@75 {
		compatible = "nxp,pca9548"; /* u135 */
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x75>;

		i2c@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;
			/* HPC0_IIC */
		};
		i2c@1 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <1>;
			/* HPC1_IIC */
		};
		i2c@2 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <2>;
			/* SYSMON */
		};
		i2c@3 { /* i2c mw 75 0 8 */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <3>;
			/* DDR4 SODIMM */
			dev@19 { /* u-boot detection */
				compatible = "xxx";
				reg = <0x19>;
			};
			dev@30 { /* u-boot detection */
				compatible = "xxx";
				reg = <0x30>;
			};
			dev@35 { /* u-boot detection */
				compatible = "xxx";
				reg = <0x35>;
			};
			dev@36 { /* u-boot detection */
				compatible = "xxx";
				reg = <0x36>;
			};
			dev@51 { /* u-boot detection - maybe SPD */
				compatible = "xxx";
				reg = <0x51>;
			};
		};
		i2c@4 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <4>;
			/* SEP 3 */
		};
		i2c@5 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <5>;
			/* SEP 2 */
		};
		i2c@6 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <6>;
			/* SEP 1 */
		};
		i2c@7 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <7>;
			/* SEP 0 */
		};
	};
};

&xilinx_drm {
	status = "okay";
	clocks = <&si570_1>;
};

&xlnx_dp {
	status = "okay";
	phy-names = "dp-phy0", "dp-phy1";
	phys = <&lane1 5 0 3 27000000>, <&lane0 5 1 3 27000000>;
};

&xlnx_dp_sub {
	status = "okay";
	xlnx,vid-clk-pl;
};

&xlnx_dp_snd_pcm0 {
	status = "okay";
};

&xlnx_dp_snd_pcm1 {
	status = "okay";
};

&xlnx_dp_snd_card {
	status = "okay";
};

&xlnx_dp_snd_codec0 {
	status = "okay";
};

&xlnx_dpdma {
	status = "okay";
};
